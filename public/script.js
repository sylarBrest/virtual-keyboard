(()=>{"use strict";console.log("Virtual Keyboard task started");const e=new class{constructor(){this.elements={main:null,textarea:null,keyboardContainer:null,keys:[]},this.properties={value:"",isCapsLock:!1,isShiftPressed:!1,lang:"en"}}init(){this.elements.main=document.createElement("main"),this.elements.main.classList.add("main"),this.elements.main.classList.add("main-container"),this.elements.textarea=document.createElement("textarea"),this.elements.textarea.classList.add("textarea"),this.elements.textarea.setAttribute("autofocus","autofocus"),this.elements.textarea.setAttribute("rows","10"),this.elements.keyboardContainer=document.createElement("div"),this.elements.keyboardContainer.classList.add("keyboard"),this.elements.keys=this.elements.keyboardContainer.querySelectorAll(".key"),this.render()}createKeys(){const e=document.createDocumentFragment(),t=e=>`<span class="material-icons">${e}</span>`;return["backtick","1","2","3","4","5","6","7","8","9","0","-","=","backspace","tab","q","w","e","r","t","y","u","i","o","p","[","]","\\","del","capslock","a","s","d","f","g","h","j","k","l",";","'","enter","leftshift","z","x","c","v","b","n","m",",",".","/","uparrow","rightshift","leftctrl","win","leftalt","spacebar","rightalt","leftarrow","downarrow","rightarrow","rightctrl"].forEach((s=>{const a=document.createElement("button");let r;switch(a.setAttribute("type","button"),a.classList.add("key"),s){case"del":a.classList.add("text"),a.innerHTML="del";break;case"leftctrl":case"rightctrl":a.classList.add("text"),a.textContent="ctrl";break;case"leftalt":case"rightalt":a.classList.add("text"),a.textContent="alt";break;case"backtick":a.classList.add("symbol"),[a.textContent,r]=["`","`"];break;case"tab":[a.innerHTML,r]=[t("keyboard_tab"),"\t"];break;case"win":a.innerHTML=t("window");break;case"uparrow":a.innerHTML=t("keyboard_arrow_up");break;case"leftarrow":a.innerHTML=t("keyboard_arrow_left");break;case"downarrow":a.innerHTML=t("keyboard_arrow_down");break;case"rightarrow":a.innerHTML=t("keyboard_arrow_right");break;case"backspace":a.classList.add("wide"),a.innerHTML=t("keyboard_backspace");break;case"capslock":a.classList.add("wide"),a.innerHTML=t("keyboard_capslock"),a.addEventListener("click",(()=>{a.classList.toggle("pressed"),this.capsLockOn()}));break;case"enter":a.classList.add("wide"),[a.innerHTML,r]=[t("keyboard_return"),"\n"];break;case"leftshift":case"rightshift":a.classList.add("wide"),a.innerHTML=t("publish"),a.addEventListener("click",(()=>this.shiftKeyOn()));break;case"spacebar":a.classList.add("ultrawide"),[a.innerHTML,r]=[t("space_bar")," "];break;default:a.classList.add("symbol"),[r,a.innerHTML]=[s,s]}a.addEventListener("click",(()=>this.mouseClick(r))),e.append(a)})),e}mouseClick(e=""){const t=this.properties.isCapsLock?e.toUpperCase():e,s=this.elements.textarea;s.setRangeText(t,s.selectionStart,s.selectionEnd),this.elements.textarea.focus(),this.elements.textarea.selectionStart=this.elements.textarea.selectionEnd+1}capsLockOn(){this.properties.isCapsLock=!this.properties.isCapsLock,this.elements.keyboardContainer.querySelectorAll(".symbol").forEach((e=>{const t=e;t.textContent=this.properties.isCapsLock?t.textContent.toUpperCase():t.textContent.toLowerCase()}))}shiftKeyOn(){this.properties.isShiftPressed=!this.properties.isShiftPressed}render(){document.body.prepend(this.elements.main),this.elements.main.appendChild(this.elements.textarea),this.elements.main.appendChild(this.elements.keyboardContainer),this.elements.keyboardContainer.appendChild(this.createKeys())}toString(){return this.properties}};e.init(),console.log(e.toString())})();